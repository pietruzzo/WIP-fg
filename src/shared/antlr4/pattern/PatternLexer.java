// Generated from /home/pietro/IdeaProjects/WIP-fg/src/shared/antlr4/pattern/Pattern.g4 by ANTLR 4.8
package shared.antlr4.pattern;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class PatternLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.8", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, Operator=45, 
		NOT=46, AND=47, OR=48, DOT=49, Litterals=50, Timeunit=51, Number=52, Skip=53;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
			"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
			"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
			"T__41", "T__42", "T__43", "Operator", "NOT", "AND", "OR", "DOT", "Litterals", 
			"Timeunit", "Number", "Skip"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "';'", "'.g()'", "'.collect('", "','", "')'", "'.compute('", "'.select('", 
			"'.SubGraphByV('", "'.SubGraphByE('", "'.extractV('", "'.extractE('", 
			"'.evaluate('", "', ['", "']'", "'='", "'EDGE['", "'('", "'.map'", "'.flatmap'", 
			"'.reduce'", "'.filter'", "'.groupby'", "'.Merge'", "'.collect'", "'.avg'", 
			"'.max'", "'.min'", "'.count'", "'.select'", "'.trigger('", "'edge'", 
			"'vertex'", "'addition'", "'deletion'", "'update'", "'as'", "'['", "'.emit('", 
			"'ago'", "'every'", "'within'", "'''", "'$'", "'\"'", null, "'not'", 
			"'and'", "'or'", "'.'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, "Operator", "NOT", 
			"AND", "OR", "DOT", "Litterals", "Timeunit", "Number", "Skip"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public PatternLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Pattern.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\67\u01c3\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4"+
		"\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3"+
		"\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t"+
		"\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3"+
		"\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3"+
		"\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3"+
		"\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3"+
		"\21\3\21\3\21\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3"+
		"\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3"+
		"\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3"+
		"\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3"+
		"\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3"+
		"\33\3\33\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3"+
		"\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3"+
		"\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\""+
		"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3"+
		"%\3%\3%\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3)\3)\3)\3)\3)\3"+
		")\3*\3*\3*\3*\3*\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3.\3.\3.\3.\3.\5.\u0191"+
		"\n.\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\62\3\62\3\63\3\63"+
		"\3\63\6\63\u01a3\n\63\r\63\16\63\u01a4\3\64\6\64\u01a8\n\64\r\64\16\64"+
		"\u01a9\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\5\64\u01b5\n\64\6"+
		"\64\u01b7\n\64\r\64\16\64\u01b8\3\65\3\65\3\66\6\66\u01be\n\66\r\66\16"+
		"\66\u01bf\3\66\3\66\2\2\67\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25"+
		"\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32"+
		"\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a"+
		"\62c\63e\64g\65i\66k\67\3\2\6\4\2>>@@\4\2C\\c|\3\2\62;\4\2\13\f\"\"\2"+
		"\u01ce\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2"+
		"\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3"+
		"\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2"+
		"\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2"+
		"/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2"+
		"\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2"+
		"G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3"+
		"\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2"+
		"\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\3"+
		"m\3\2\2\2\5o\3\2\2\2\7t\3\2\2\2\t~\3\2\2\2\13\u0080\3\2\2\2\r\u0082\3"+
		"\2\2\2\17\u008c\3\2\2\2\21\u0095\3\2\2\2\23\u00a3\3\2\2\2\25\u00b1\3\2"+
		"\2\2\27\u00bc\3\2\2\2\31\u00c7\3\2\2\2\33\u00d2\3\2\2\2\35\u00d6\3\2\2"+
		"\2\37\u00d8\3\2\2\2!\u00da\3\2\2\2#\u00e0\3\2\2\2%\u00e2\3\2\2\2\'\u00e7"+
		"\3\2\2\2)\u00f0\3\2\2\2+\u00f8\3\2\2\2-\u0100\3\2\2\2/\u0109\3\2\2\2\61"+
		"\u0110\3\2\2\2\63\u0119\3\2\2\2\65\u011e\3\2\2\2\67\u0123\3\2\2\29\u0128"+
		"\3\2\2\2;\u012f\3\2\2\2=\u0137\3\2\2\2?\u0141\3\2\2\2A\u0146\3\2\2\2C"+
		"\u014d\3\2\2\2E\u0156\3\2\2\2G\u015f\3\2\2\2I\u0166\3\2\2\2K\u0169\3\2"+
		"\2\2M\u016b\3\2\2\2O\u0172\3\2\2\2Q\u0176\3\2\2\2S\u017c\3\2\2\2U\u0183"+
		"\3\2\2\2W\u0185\3\2\2\2Y\u0187\3\2\2\2[\u0190\3\2\2\2]\u0192\3\2\2\2_"+
		"\u0196\3\2\2\2a\u019a\3\2\2\2c\u019d\3\2\2\2e\u01a2\3\2\2\2g\u01b6\3\2"+
		"\2\2i\u01ba\3\2\2\2k\u01bd\3\2\2\2mn\7=\2\2n\4\3\2\2\2op\7\60\2\2pq\7"+
		"i\2\2qr\7*\2\2rs\7+\2\2s\6\3\2\2\2tu\7\60\2\2uv\7e\2\2vw\7q\2\2wx\7n\2"+
		"\2xy\7n\2\2yz\7g\2\2z{\7e\2\2{|\7v\2\2|}\7*\2\2}\b\3\2\2\2~\177\7.\2\2"+
		"\177\n\3\2\2\2\u0080\u0081\7+\2\2\u0081\f\3\2\2\2\u0082\u0083\7\60\2\2"+
		"\u0083\u0084\7e\2\2\u0084\u0085\7q\2\2\u0085\u0086\7o\2\2\u0086\u0087"+
		"\7r\2\2\u0087\u0088\7w\2\2\u0088\u0089\7v\2\2\u0089\u008a\7g\2\2\u008a"+
		"\u008b\7*\2\2\u008b\16\3\2\2\2\u008c\u008d\7\60\2\2\u008d\u008e\7u\2\2"+
		"\u008e\u008f\7g\2\2\u008f\u0090\7n\2\2\u0090\u0091\7g\2\2\u0091\u0092"+
		"\7e\2\2\u0092\u0093\7v\2\2\u0093\u0094\7*\2\2\u0094\20\3\2\2\2\u0095\u0096"+
		"\7\60\2\2\u0096\u0097\7U\2\2\u0097\u0098\7w\2\2\u0098\u0099\7d\2\2\u0099"+
		"\u009a\7I\2\2\u009a\u009b\7t\2\2\u009b\u009c\7c\2\2\u009c\u009d\7r\2\2"+
		"\u009d\u009e\7j\2\2\u009e\u009f\7D\2\2\u009f\u00a0\7{\2\2\u00a0\u00a1"+
		"\7X\2\2\u00a1\u00a2\7*\2\2\u00a2\22\3\2\2\2\u00a3\u00a4\7\60\2\2\u00a4"+
		"\u00a5\7U\2\2\u00a5\u00a6\7w\2\2\u00a6\u00a7\7d\2\2\u00a7\u00a8\7I\2\2"+
		"\u00a8\u00a9\7t\2\2\u00a9\u00aa\7c\2\2\u00aa\u00ab\7r\2\2\u00ab\u00ac"+
		"\7j\2\2\u00ac\u00ad\7D\2\2\u00ad\u00ae\7{\2\2\u00ae\u00af\7G\2\2\u00af"+
		"\u00b0\7*\2\2\u00b0\24\3\2\2\2\u00b1\u00b2\7\60\2\2\u00b2\u00b3\7g\2\2"+
		"\u00b3\u00b4\7z\2\2\u00b4\u00b5\7v\2\2\u00b5\u00b6\7t\2\2\u00b6\u00b7"+
		"\7c\2\2\u00b7\u00b8\7e\2\2\u00b8\u00b9\7v\2\2\u00b9\u00ba\7X\2\2\u00ba"+
		"\u00bb\7*\2\2\u00bb\26\3\2\2\2\u00bc\u00bd\7\60\2\2\u00bd\u00be\7g\2\2"+
		"\u00be\u00bf\7z\2\2\u00bf\u00c0\7v\2\2\u00c0\u00c1\7t\2\2\u00c1\u00c2"+
		"\7c\2\2\u00c2\u00c3\7e\2\2\u00c3\u00c4\7v\2\2\u00c4\u00c5\7G\2\2\u00c5"+
		"\u00c6\7*\2\2\u00c6\30\3\2\2\2\u00c7\u00c8\7\60\2\2\u00c8\u00c9\7g\2\2"+
		"\u00c9\u00ca\7x\2\2\u00ca\u00cb\7c\2\2\u00cb\u00cc\7n\2\2\u00cc\u00cd"+
		"\7w\2\2\u00cd\u00ce\7c\2\2\u00ce\u00cf\7v\2\2\u00cf\u00d0\7g\2\2\u00d0"+
		"\u00d1\7*\2\2\u00d1\32\3\2\2\2\u00d2\u00d3\7.\2\2\u00d3\u00d4\7\"\2\2"+
		"\u00d4\u00d5\7]\2\2\u00d5\34\3\2\2\2\u00d6\u00d7\7_\2\2\u00d7\36\3\2\2"+
		"\2\u00d8\u00d9\7?\2\2\u00d9 \3\2\2\2\u00da\u00db\7G\2\2\u00db\u00dc\7"+
		"F\2\2\u00dc\u00dd\7I\2\2\u00dd\u00de\7G\2\2\u00de\u00df\7]\2\2\u00df\""+
		"\3\2\2\2\u00e0\u00e1\7*\2\2\u00e1$\3\2\2\2\u00e2\u00e3\7\60\2\2\u00e3"+
		"\u00e4\7o\2\2\u00e4\u00e5\7c\2\2\u00e5\u00e6\7r\2\2\u00e6&\3\2\2\2\u00e7"+
		"\u00e8\7\60\2\2\u00e8\u00e9\7h\2\2\u00e9\u00ea\7n\2\2\u00ea\u00eb\7c\2"+
		"\2\u00eb\u00ec\7v\2\2\u00ec\u00ed\7o\2\2\u00ed\u00ee\7c\2\2\u00ee\u00ef"+
		"\7r\2\2\u00ef(\3\2\2\2\u00f0\u00f1\7\60\2\2\u00f1\u00f2\7t\2\2\u00f2\u00f3"+
		"\7g\2\2\u00f3\u00f4\7f\2\2\u00f4\u00f5\7w\2\2\u00f5\u00f6\7e\2\2\u00f6"+
		"\u00f7\7g\2\2\u00f7*\3\2\2\2\u00f8\u00f9\7\60\2\2\u00f9\u00fa\7h\2\2\u00fa"+
		"\u00fb\7k\2\2\u00fb\u00fc\7n\2\2\u00fc\u00fd\7v\2\2\u00fd\u00fe\7g\2\2"+
		"\u00fe\u00ff\7t\2\2\u00ff,\3\2\2\2\u0100\u0101\7\60\2\2\u0101\u0102\7"+
		"i\2\2\u0102\u0103\7t\2\2\u0103\u0104\7q\2\2\u0104\u0105\7w\2\2\u0105\u0106"+
		"\7r\2\2\u0106\u0107\7d\2\2\u0107\u0108\7{\2\2\u0108.\3\2\2\2\u0109\u010a"+
		"\7\60\2\2\u010a\u010b\7O\2\2\u010b\u010c\7g\2\2\u010c\u010d\7t\2\2\u010d"+
		"\u010e\7i\2\2\u010e\u010f\7g\2\2\u010f\60\3\2\2\2\u0110\u0111\7\60\2\2"+
		"\u0111\u0112\7e\2\2\u0112\u0113\7q\2\2\u0113\u0114\7n\2\2\u0114\u0115"+
		"\7n\2\2\u0115\u0116\7g\2\2\u0116\u0117\7e\2\2\u0117\u0118\7v\2\2\u0118"+
		"\62\3\2\2\2\u0119\u011a\7\60\2\2\u011a\u011b\7c\2\2\u011b\u011c\7x\2\2"+
		"\u011c\u011d\7i\2\2\u011d\64\3\2\2\2\u011e\u011f\7\60\2\2\u011f\u0120"+
		"\7o\2\2\u0120\u0121\7c\2\2\u0121\u0122\7z\2\2\u0122\66\3\2\2\2\u0123\u0124"+
		"\7\60\2\2\u0124\u0125\7o\2\2\u0125\u0126\7k\2\2\u0126\u0127\7p\2\2\u0127"+
		"8\3\2\2\2\u0128\u0129\7\60\2\2\u0129\u012a\7e\2\2\u012a\u012b\7q\2\2\u012b"+
		"\u012c\7w\2\2\u012c\u012d\7p\2\2\u012d\u012e\7v\2\2\u012e:\3\2\2\2\u012f"+
		"\u0130\7\60\2\2\u0130\u0131\7u\2\2\u0131\u0132\7g\2\2\u0132\u0133\7n\2"+
		"\2\u0133\u0134\7g\2\2\u0134\u0135\7e\2\2\u0135\u0136\7v\2\2\u0136<\3\2"+
		"\2\2\u0137\u0138\7\60\2\2\u0138\u0139\7v\2\2\u0139\u013a\7t\2\2\u013a"+
		"\u013b\7k\2\2\u013b\u013c\7i\2\2\u013c\u013d\7i\2\2\u013d\u013e\7g\2\2"+
		"\u013e\u013f\7t\2\2\u013f\u0140\7*\2\2\u0140>\3\2\2\2\u0141\u0142\7g\2"+
		"\2\u0142\u0143\7f\2\2\u0143\u0144\7i\2\2\u0144\u0145\7g\2\2\u0145@\3\2"+
		"\2\2\u0146\u0147\7x\2\2\u0147\u0148\7g\2\2\u0148\u0149\7t\2\2\u0149\u014a"+
		"\7v\2\2\u014a\u014b\7g\2\2\u014b\u014c\7z\2\2\u014cB\3\2\2\2\u014d\u014e"+
		"\7c\2\2\u014e\u014f\7f\2\2\u014f\u0150\7f\2\2\u0150\u0151\7k\2\2\u0151"+
		"\u0152\7v\2\2\u0152\u0153\7k\2\2\u0153\u0154\7q\2\2\u0154\u0155\7p\2\2"+
		"\u0155D\3\2\2\2\u0156\u0157\7f\2\2\u0157\u0158\7g\2\2\u0158\u0159\7n\2"+
		"\2\u0159\u015a\7g\2\2\u015a\u015b\7v\2\2\u015b\u015c\7k\2\2\u015c\u015d"+
		"\7q\2\2\u015d\u015e\7p\2\2\u015eF\3\2\2\2\u015f\u0160\7w\2\2\u0160\u0161"+
		"\7r\2\2\u0161\u0162\7f\2\2\u0162\u0163\7c\2\2\u0163\u0164\7v\2\2\u0164"+
		"\u0165\7g\2\2\u0165H\3\2\2\2\u0166\u0167\7c\2\2\u0167\u0168\7u\2\2\u0168"+
		"J\3\2\2\2\u0169\u016a\7]\2\2\u016aL\3\2\2\2\u016b\u016c\7\60\2\2\u016c"+
		"\u016d\7g\2\2\u016d\u016e\7o\2\2\u016e\u016f\7k\2\2\u016f\u0170\7v\2\2"+
		"\u0170\u0171\7*\2\2\u0171N\3\2\2\2\u0172\u0173\7c\2\2\u0173\u0174\7i\2"+
		"\2\u0174\u0175\7q\2\2\u0175P\3\2\2\2\u0176\u0177\7g\2\2\u0177\u0178\7"+
		"x\2\2\u0178\u0179\7g\2\2\u0179\u017a\7t\2\2\u017a\u017b\7{\2\2\u017bR"+
		"\3\2\2\2\u017c\u017d\7y\2\2\u017d\u017e\7k\2\2\u017e\u017f\7v\2\2\u017f"+
		"\u0180\7j\2\2\u0180\u0181\7k\2\2\u0181\u0182\7p\2\2\u0182T\3\2\2\2\u0183"+
		"\u0184\7)\2\2\u0184V\3\2\2\2\u0185\u0186\7&\2\2\u0186X\3\2\2\2\u0187\u0188"+
		"\7$\2\2\u0188Z\3\2\2\2\u0189\u0191\t\2\2\2\u018a\u018b\7?\2\2\u018b\u0191"+
		"\7?\2\2\u018c\u018d\7>\2\2\u018d\u0191\7?\2\2\u018e\u018f\7@\2\2\u018f"+
		"\u0191\7?\2\2\u0190\u0189\3\2\2\2\u0190\u018a\3\2\2\2\u0190\u018c\3\2"+
		"\2\2\u0190\u018e\3\2\2\2\u0191\\\3\2\2\2\u0192\u0193\7p\2\2\u0193\u0194"+
		"\7q\2\2\u0194\u0195\7v\2\2\u0195^\3\2\2\2\u0196\u0197\7c\2\2\u0197\u0198"+
		"\7p\2\2\u0198\u0199\7f\2\2\u0199`\3\2\2\2\u019a\u019b\7q\2\2\u019b\u019c"+
		"\7t\2\2\u019cb\3\2\2\2\u019d\u019e\7\60\2\2\u019ed\3\2\2\2\u019f\u01a3"+
		"\t\3\2\2\u01a0\u01a3\5i\65\2\u01a1\u01a3\5c\62\2\u01a2\u019f\3\2\2\2\u01a2"+
		"\u01a0\3\2\2\2\u01a2\u01a1\3\2\2\2\u01a3\u01a4\3\2\2\2\u01a4\u01a2\3\2"+
		"\2\2\u01a4\u01a5\3\2\2\2\u01a5f\3\2\2\2\u01a6\u01a8\5i\65\2\u01a7\u01a6"+
		"\3\2\2\2\u01a8\u01a9\3\2\2\2\u01a9\u01a7\3\2\2\2\u01a9\u01aa\3\2\2\2\u01aa"+
		"\u01b4\3\2\2\2\u01ab\u01ac\7/\2\2\u01ac\u01ad\7o\2\2\u01ad\u01b5\7u\2"+
		"\2\u01ae\u01af\7/\2\2\u01af\u01b5\7u\2\2\u01b0\u01b1\7/\2\2\u01b1\u01b5"+
		"\7o\2\2\u01b2\u01b3\7/\2\2\u01b3\u01b5\7j\2\2\u01b4\u01ab\3\2\2\2\u01b4"+
		"\u01ae\3\2\2\2\u01b4\u01b0\3\2\2\2\u01b4\u01b2\3\2\2\2\u01b5\u01b7\3\2"+
		"\2\2\u01b6\u01a7\3\2\2\2\u01b7\u01b8\3\2\2\2\u01b8\u01b6\3\2\2\2\u01b8"+
		"\u01b9\3\2\2\2\u01b9h\3\2\2\2\u01ba\u01bb\t\4\2\2\u01bbj\3\2\2\2\u01bc"+
		"\u01be\t\5\2\2\u01bd\u01bc\3\2\2\2\u01be\u01bf\3\2\2\2\u01bf\u01bd\3\2"+
		"\2\2\u01bf\u01c0\3\2\2\2\u01c0\u01c1\3\2\2\2\u01c1\u01c2\b\66\2\2\u01c2"+
		"l\3\2\2\2\n\2\u0190\u01a2\u01a4\u01a9\u01b4\u01b8\u01bf\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}